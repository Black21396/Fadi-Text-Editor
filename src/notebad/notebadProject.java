
package notebad;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Fadi_Salameh
 */
public class notebadProject extends javax.swing.JFrame {

    /** Creates new form notebadProject */
    File newSaveFile = null; // We Put Global Because When We Want Save File It Must Be Open Or New 
    String inf1=""; // To put All Informatin In English For Show All Information Button
    String inf2=""; // To put All Informatin In Arabic For Show All Information Button
    public notebadProject() { // constructor
        initComponents();
        super.setTitle("Fadi Text Editor");
        super.setAlwaysOnTop(false);
      
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenu10 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu11 = new javax.swing.JMenu();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        textField1 = new java.awt.TextField();
        label6 = new java.awt.Label();
        label7 = new java.awt.Label();
        res = new javax.swing.JTextField();
        resLabel = new javax.swing.JLabel();
        convert = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(2, 3), new java.awt.Dimension(2, 3), new java.awt.Dimension(2, 3));
        jScrollPane3 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        newFile = new javax.swing.JMenuItem();
        openFile = new javax.swing.JMenuItem();
        saveFile = new javax.swing.JMenuItem();
        saveAs = new javax.swing.JMenuItem();
        print = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        edit = new javax.swing.JMenu();
        cut = new javax.swing.JMenuItem();
        copy = new javax.swing.JMenuItem();
        paste = new javax.swing.JMenuItem();
        selectAll = new javax.swing.JMenuItem();
        color = new javax.swing.JMenu();
        colorText = new javax.swing.JMenuItem();
        colorBackground = new javax.swing.JMenuItem();
        features = new javax.swing.JMenu();
        capitalLetterCount = new javax.swing.JMenuItem();
        smallLetterCount = new javax.swing.JMenuItem();
        arabicLettersCount = new javax.swing.JMenuItem();
        vowelsLetterCount = new javax.swing.JMenuItem();
        frequencyLetter = new javax.swing.JMenuItem();
        wordCount = new javax.swing.JMenuItem();
        numberCount = new javax.swing.JMenuItem();
        frequencyWord = new javax.swing.JMenuItem();
        replaceWord = new javax.swing.JMenuItem();
        showAllInfo = new javax.swing.JMenuItem();
        equation = new javax.swing.JMenu();
        linear = new javax.swing.JMenuItem();
        square = new javax.swing.JMenuItem();
        circle = new javax.swing.JMenuItem();
        sphere = new javax.swing.JMenuItem();
        parabola = new javax.swing.JMenuItem();
        ellipse = new javax.swing.JMenuItem();
        hyperbola = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        jMenu5.setText("File");
        jMenuBar2.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar2.add(jMenu6);

        jMenuItem12.setText("jMenuItem12");

        jMenuItem13.setText("jMenuItem13");

        jMenu7.setText("jMenu7");

        jMenu9.setText("jMenu9");

        jMenu10.setText("jMenu10");

        jMenuItem14.setText("jMenuItem14");

        jMenu11.setText("jMenu11");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NoteBad_Fadi Salameh");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 0));
        setBounds(new java.awt.Rectangle(0, 0, 300, 300));
        setFont(new java.awt.Font("Agency FB", 1, 10)); // NOI18N
        setForeground(new java.awt.Color(51, 255, 0));

        jButton1.setText("jButton1");

        jLabel1.setText("jLabel1");

        jTextField1.setText("jTextField1");

        label1.setText("label1");

        label2.setText("label2");

        label3.setText("label3");

        label4.setText("label4");

        label5.setText("label5");

        textField1.setText("textField1");

        label6.setText("label6");

        label7.setText("label7");

        res.setEditable(false);
        res.setBackground(new java.awt.Color(255, 255, 204));
        res.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        res.setText("            ");
        res.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resActionPerformed(evt);
            }
        });

        resLabel.setBackground(new java.awt.Color(102, 255, 102));
        resLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        resLabel.setText(" Result");

        convert.setBackground(new java.awt.Color(204, 204, 204));
        convert.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        convert.setText("Convert To Arabic");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(text);

        jMenuBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        file.setText("File");
        file.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        newFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        newFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download (17).jpg"))); // NOI18N
        newFile.setText("New File");
        newFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileActionPerformed(evt);
            }
        });
        file.add(newFile);

        openFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        openFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download (18).jpg"))); // NOI18N
        openFile.setText("Open File");
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });
        file.add(openFile);

        saveFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        saveFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/ุณ.jpg"))); // NOI18N
        saveFile.setText("Save File");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });
        file.add(saveFile);

        saveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveAs.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        saveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/images.png"))); // NOI18N
        saveAs.setText("Sava As");
        saveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsActionPerformed(evt);
            }
        });
        file.add(saveAs);

        print.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        print.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download (20).jpg"))); // NOI18N
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        file.add(print);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/images (1).jpg"))); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);
        file.add(jSeparator1);
        file.add(jSeparator2);

        jMenuBar1.add(file);

        edit.setText("Edit");
        edit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download (1).png"))); // NOI18N
        cut.setText("Cut");
        cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutActionPerformed(evt);
            }
        });
        edit.add(cut);

        copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download (2).png"))); // NOI18N
        copy.setText("Copy");
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });
        edit.add(copy);

        paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download.png"))); // NOI18N
        paste.setText("Paste");
        paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteActionPerformed(evt);
            }
        });
        edit.add(paste);

        selectAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        selectAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/ุณ.png"))); // NOI18N
        selectAll.setText("Select All");
        selectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllActionPerformed(evt);
            }
        });
        edit.add(selectAll);

        jMenuBar1.add(edit);

        color.setBackground(new java.awt.Color(255, 204, 204));
        color.setText("Color");
        color.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        colorText.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        colorText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/images (1).png"))); // NOI18N
        colorText.setText("Select Color Text");
        colorText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorTextActionPerformed(evt);
            }
        });
        color.add(colorText);

        colorBackground.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK));
        colorBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download (21).jpg"))); // NOI18N
        colorBackground.setText("Select Color Background");
        colorBackground.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorBackgroundActionPerformed(evt);
            }
        });
        color.add(colorBackground);

        jMenuBar1.add(color);

        features.setText("Features");
        features.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        capitalLetterCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download (1).jpg"))); // NOI18N
        capitalLetterCount.setText("Capital Letters Count");
        capitalLetterCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capitalLetterCountActionPerformed(evt);
            }
        });
        features.add(capitalLetterCount);

        smallLetterCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/small.png"))); // NOI18N
        smallLetterCount.setText("Small Letters Count");
        smallLetterCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallLetterCountActionPerformed(evt);
            }
        });
        features.add(smallLetterCount);

        arabicLettersCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/arabic.png"))); // NOI18N
        arabicLettersCount.setText("Arabic Letters Count");
        arabicLettersCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arabicLettersCountActionPerformed(evt);
            }
        });
        features.add(arabicLettersCount);

        vowelsLetterCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/vowels.png"))); // NOI18N
        vowelsLetterCount.setText("Vowels Letter Count");
        vowelsLetterCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vowelsLetterCountActionPerformed(evt);
            }
        });
        features.add(vowelsLetterCount);

        frequencyLetter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/freq.png"))); // NOI18N
        frequencyLetter.setText("Frequency Of Letter");
        frequencyLetter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyLetterActionPerformed(evt);
            }
        });
        features.add(frequencyLetter);

        wordCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/a.jpg"))); // NOI18N
        wordCount.setText("Words Count");
        wordCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordCountActionPerformed(evt);
            }
        });
        features.add(wordCount);

        numberCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/number.png"))); // NOI18N
        numberCount.setText("Numbers Count");
        numberCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberCountActionPerformed(evt);
            }
        });
        features.add(numberCount);

        frequencyWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/freqWord.png"))); // NOI18N
        frequencyWord.setText("Frequency Of Word");
        frequencyWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyWordActionPerformed(evt);
            }
        });
        features.add(frequencyWord);

        replaceWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/download (2).jpg"))); // NOI18N
        replaceWord.setText("Replace Word");
        replaceWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceWordActionPerformed(evt);
            }
        });
        features.add(replaceWord);

        showAllInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/info.png"))); // NOI18N
        showAllInfo.setText("Show All Information");
        showAllInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllInfoActionPerformed(evt);
            }
        });
        features.add(showAllInfo);

        jMenuBar1.add(features);

        equation.setText("Equation");
        equation.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        equation.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                equationMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        equation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                equationMouseClicked(evt);
            }
        });
        equation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equationActionPerformed(evt);
            }
        });

        linear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/a.jpg"))); // NOI18N
        linear.setText("Linear Equation");
        linear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linearActionPerformed(evt);
            }
        });
        equation.add(linear);

        square.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/images (7).png"))); // NOI18N
        square.setText("Square Equation");
        square.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareActionPerformed(evt);
            }
        });
        equation.add(square);

        circle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/circle.png"))); // NOI18N
        circle.setText("Circle Equation");
        circle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circleActionPerformed(evt);
            }
        });
        equation.add(circle);

        sphere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/a.png"))); // NOI18N
        sphere.setText("Sphere Equation");
        sphere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sphereActionPerformed(evt);
            }
        });
        equation.add(sphere);

        parabola.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/c.png"))); // NOI18N
        parabola.setText("Parabola");
        parabola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parabolaActionPerformed(evt);
            }
        });
        equation.add(parabola);

        ellipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/ellipse.png"))); // NOI18N
        ellipse.setText("Ellipse");
        ellipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ellipseActionPerformed(evt);
            }
        });
        equation.add(ellipse);

        hyperbola.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notebad/b.png"))); // NOI18N
        hyperbola.setText("Hyperbola");
        hyperbola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hyperbolaActionPerformed(evt);
            }
        });
        equation.add(hyperbola);

        jMenuBar1.add(equation);

        about.setText("About");
        about.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        about.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                aboutMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
        });
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        jMenuBar1.add(about);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(resLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(res, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 419, Short.MAX_VALUE)
                .addComponent(convert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(res, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(convert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        // ReadFile Button
        JFileChooser open = new JFileChooser(); // open Dialog To Select Position Of File
        FileNameExtensionFilter extension1 = new FileNameExtensionFilter(".txt" , "txt"); // To Add What Extension We Want To Chooser Dialog
        FileNameExtensionFilter extension2 = new FileNameExtensionFilter(".css" , "css");
         FileNameExtensionFilter extension3 = new FileNameExtensionFilter(".html" , "html");
            FileNameExtensionFilter extension6 = new FileNameExtensionFilter(".cpp" , "cpp");
            open.setFileFilter(extension1); // To Put The Exctension Inside Dialog(For Interface)
            open.setFileFilter(extension2);
            open.setFileFilter(extension3);
            open.setFileFilter(extension6);      
        FileInputStream fis = null; // Define Variable To Read File Which User Selec
         BufferedInputStream bis = null; // If Size The File Very Big We Capsulate In Buffer
        int result = open.showOpenDialog(this); // To Know If  User Select Thing
        if(result == 0){ //  If User Select
            text.setText(""); // When We Open File Delete All Previous Words
            try{
            File path = open.getSelectedFile(); // Know What File Which User Select
            fis = new FileInputStream(path); 
            newSaveFile = new File(path.getPath()); // To Keep Value Of Global Because We Want To Save This File
            bis = new BufferedInputStream(fis);
            String s="";
            int c;
            while((c=bis.read()) != -1) // While The File Is Not End
                text.setText(s+=(char)c ); // Show To The Text Area
            }catch(Exception e){
                e.printStackTrace();
            }finally{
                try {
                    fis.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
        
    }//GEN-LAST:event_openFileActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try {
            // Print Button
            text.print();
        } catch (PrinterException ex) {
                ex.printStackTrace();
        }
        
        
    }//GEN-LAST:event_printActionPerformed

    private void pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteActionPerformed
        // Paste Button
        text.paste();
    }//GEN-LAST:event_pasteActionPerformed

    private void newFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileActionPerformed
       // New File Button
        JFileChooser save = new JFileChooser(); // To Show Wheere I Save My File
        FileNameExtensionFilter extension1 = new FileNameExtensionFilter(".txt" , "txt"); // To Add What Extension We Want To Chooser Dialog
        FileNameExtensionFilter extension2 = new FileNameExtensionFilter(".css" , "css");
         FileNameExtensionFilter extension3 = new FileNameExtensionFilter(".html" , "html");
            FileNameExtensionFilter extension6 = new FileNameExtensionFilter(".cpp" , "cpp");
            save.setFileFilter(extension1); // To Put The Exctension Inside Dialog(For Interface)
            save.setFileFilter(extension2);
            save.setFileFilter(extension3);
            save.setFileFilter(extension6);
        int result = save.showOpenDialog(this); // Return The Place Who Want Save File It
        if(result == 0){ // If The User Click Save
            
            try {
               javax.swing.filechooser.FileFilter filter =  save.getFileFilter(); // To Save What User Select Extension And Put Inside The Path Of File
                newSaveFile = new File(save.getSelectedFile().getPath() + filter.getDescription().toString()); // Created Object The File And Path Who Selected By User
                newSaveFile.createNewFile(); // Cread The File On Computer
                text.setText(""); // To Remove Area Of Write After We Save The File
            } catch (IOException ex) {
                ex.getStackTrace();
            }
        }
        
        
        
    }//GEN-LAST:event_newFileActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
      // Save Button
        PrintWriter pw = null;
        try {
            pw = new PrintWriter(newSaveFile);
             pw.print(text.getText()); // Save The File With Content Which Write On The Text Area
        } catch (FileNotFoundException ex) {
               ex.printStackTrace();
        }
        finally{
            pw.close();
            if(convert.getText().equals("Convert To Arabic"))
             res.setText("Successfuly Save");
            else
                res.setText("ุชู ุงูุญูุธ ุจูุฌุงุญ");
        } 
       
    }//GEN-LAST:event_saveFileActionPerformed

    private void saveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsActionPerformed
        // Save As Button
        JFileChooser save = new JFileChooser(); // To Show Wheere I Save My File
        FileNameExtensionFilter extension1 = new FileNameExtensionFilter(".txt" , "txt"); // To Add What Extension We Want To Chooser Dialog
        FileNameExtensionFilter extension2 = new FileNameExtensionFilter(".css" , "css");
        FileNameExtensionFilter extension3 = new FileNameExtensionFilter(".html" , "html");
        FileNameExtensionFilter extension6 = new FileNameExtensionFilter(".cpp" , "cpp");
        save.setFileFilter(extension1); // To Put The Exctension Inside Dialog(For Interface)
        save.setFileFilter(extension2);
        save.setFileFilter(extension3);
        save.setFileFilter(extension6);
        int result = save.showSaveDialog(this); // Return The Place Who Want Save File It
        if(result == 0){ // If The User Click Save
            PrintWriter pw = null;
            try {
               javax.swing.filechooser.FileFilter filter =  save.getFileFilter(); // To Save What User Select Extension And Put Inside The Path Of File
                File saveAs = new File(save.getSelectedFile().getPath()+filter.getDescription().toString());
                saveAs.createNewFile();
                pw = new PrintWriter(saveAs);
                pw.println(text.getText());
            } catch (IOException ex) {
                ex.getStackTrace();
            }finally{
                pw.close();
            }
        }
        
    }//GEN-LAST:event_saveAsActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
       // Exit Button
        int ans=JOptionPane.showConfirmDialog(null, "Do You Really Want To Exit");
        if(ans == 0)
          System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutActionPerformed
        // Cut Button
        text.cut();
    }//GEN-LAST:event_cutActionPerformed

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed
        // Copy Button
        text.copy();
    }//GEN-LAST:event_copyActionPerformed

    private void selectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllActionPerformed
        // Select All Button
        text.selectAll();
    }//GEN-LAST:event_selectAllActionPerformed

    private void colorTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorTextActionPerformed
       // Color Button
        JColorChooser colorObject = new JColorChooser();
        Color color = colorObject.showDialog(this , "Change Color" , Color.BLUE); // To Know What Color User Select
        text.setForeground(color);
    }//GEN-LAST:event_colorTextActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
      
    }//GEN-LAST:event_aboutActionPerformed

    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseClicked
        if(convert.getText().equals("Convert To Arabic"))
        JOptionPane.showMessageDialog(null, "This Is Demo Application Of Notebad Which There Is In Windows\nWorkers By:"
               + "\n1-Fadi Salameh\n2-Ola Shaker\n3-Mohammed Jamal Al_Massry " , "About Application" , JOptionPane.INFORMATION_MESSAGE);
        else
             JOptionPane.showMessageDialog(null, "ูุฐุง ุงูุชุทุจูู ุนุจุงุฑุฉ ุนู ูุณุฎุฉ ุชุฌุฑูุจูุฉ ูุจุฑูุงูุฌ ุงููููุฑุฉ ุงูููุฌูุฏ ูู ูุธุงู ูููุฏูุฒ"+"\n"+"ุงููุทูุฑูู:"
               + "\n1-ูุงุฏู ุณูุงูุฉ\n2-ุนูุง ุดุงูุฑ\n3-ูุญูุฏ ุฌูุงู ุงููุตุฑู" , "ุญูู ุงูุจุฑูุงูุฌ" , JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutMouseClicked

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileActionPerformed

    private void capitalLetterCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capitalLetterCountActionPerformed
       
        String s = text.getText();
        char[] array = s.toCharArray();
        int count=0;
        for(int i=0 ; i<array.length ; i++)
            if(array[i]>='A' && array[i]<='Z')
                count++;
         if(convert.getText().equals("Convert To Arabic")){
          res.setText("Number Of Capital Letters is:  "+count);
          inf1+="*Number Of Capital Letters is: "+count+"\n";}
         else{
          res.setText("ุนุฏุฏ ุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉ ุงููุจูุฑุฉ: "+count);
          inf2+="*ุนุฏุฏ ุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉ ุงููุจูุฑุฉ:"+count+"\n";}
    }//GEN-LAST:event_capitalLetterCountActionPerformed

    private void smallLetterCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallLetterCountActionPerformed
          String s = text.getText();
        char[] array = s.toCharArray();
        int count=0;
        for(int i=0 ; i<array.length ; i++)
            if(array[i]>='a' && array[i]<='z')
                count++;
        if(convert.getText().equals("Convert To Arabic")){
          res.setText("Number Of Small Letters is:  "+count);
          inf1+="*Number Of Small Letters is:  "+count+"\n";}
          else{
          res.setText("ุนุฏุฏ ุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉ ุงูุตุบูุฑุฉ:"+count);
          inf2+="*ุนุฏุฏ ุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉ ุงูุตุบูุฑุฉ:"+count+"\n";}
    }//GEN-LAST:event_smallLetterCountActionPerformed

    private void vowelsLetterCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vowelsLetterCountActionPerformed
         String s = text.getText();
        char[] array = s.toCharArray();
        int count=0;
        for(int i=0 ; i<array.length ; i++)
            if(array[i]=='a' || array[i]=='o' || array[i]=='e' || array[i]=='i' || array[i]=='u' ||
                    array[i]=='A' || array[i]=='O' || array[i]=='E' || array[i]=='I' || array[i]=='U')
                count++;
         if(convert.getText().equals("Convert To Arabic")){
          res.setText("Number Of Vowels Letters is:  "+count);
          inf1+="*Number Of Vowels Letters is:"+count+"\n";}
         else{
          res.setText( "ุนุฏุฏ ุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉุงูุตูุชูุฉ : "+count);
          inf2+="*ุนุฏุฏ ุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉ ุงูุตูุชูุฉ:"+count+"\n";}
    }//GEN-LAST:event_vowelsLetterCountActionPerformed

    private void wordCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordCountActionPerformed

         if(text.getText().equals("")){ // To Avoide Run Time Exception
              if(wordCount.getText().equals("Words Count")){
                 res.setText("Number Of Words is: 0 ");
                 inf1+="*Number Of Words is: 0\n";
                 return;}
              else{
                res.setText("ุนุฏุฏ ุงููููุงุช"+": 0");
                inf2+="*ุนุฏุฏ ุงููููุงุช:0\n";
                return;}
         }
        String s = text.getText();
        int count=0;
        try{
        for(int i=0 ; i<s.length()-1 ; i++){
            if((s.charAt(i)=='.'||s.charAt(i)=='<' || s.charAt(i)==',' ||s.charAt(i)==':' || s.charAt(i)==' ' || s.charAt(i)=='/' || s.charAt(i)=='-' || s.charAt(i)=='\n') &&
               ((s.charAt(i+1)>='a' && s.charAt(i+1)<='z') || (s.charAt(i+1)>='A' && s.charAt(i+1)<='Z') || (s.charAt(i+1)>='ุฃ' && s.charAt(i+1)<='ู')))      
                count++;}
        count++; // For First Word
          if(wordCount.getText().equals("Words Count")){
             res.setText("Number Of Words is:  "+count);
             inf1+="*Number Of Words is:"+count+"\n";}
          else{
             res.setText("ุนุฏุฏ ุงููููุงุช"+":"+count);
             inf2+="*ุนุฏุฏ ุงููููุงุช:"+count+"\n";}
        }
        catch(ArrayIndexOutOfBoundsException e){
           
        }
    }//GEN-LAST:event_wordCountActionPerformed

    private void numberCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberCountActionPerformed
         String s = text.getText();
        char[] array = s.toCharArray();
        int count=0;
        for(int i=0 ; i<array.length ; i++){
            if(array[i]>='0' && array[i]<='9')
                count++;}
        if(convert.getText().equals("Convert To Arabic")){
             res.setText("Count Of Number is:  "+count);
             inf1+="*Count Of Number is:"+count+"\n";}
        else{
             res.setText("ุนุฏุฏ ุงูุฃุฑูุงู:"+count);
             inf2+="*ุนุฏุฏ ุงูุฃุฑูุงู:"+count+"\n";}
    }//GEN-LAST:event_numberCountActionPerformed

    private void frequencyWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyWordActionPerformed
        String word="";
        if(convert.getText().equals("Convert To Arabic")) 
           word = JOptionPane.showInputDialog("Input The Word Please:");
        else
            word = JOptionPane.showInputDialog("ุงุฏุฎู ุงููููุฉ ูู ูุถูู:"); 
         String s = text.getText();
         Scanner in = new Scanner(s);
         int count=0;
         while(in.hasNext()){
             String e = in.next();
             if(e.equals(word))
                 count++;
         }
         if(frequencyWord.getText().equals("Frequency Of Word")){
         if(count == 0)
             res.setText("Sorry: This Word You Already Insert Is Not Exist In The Text");
         else
           res.setText("The Count Of Frequency ("+word+") Is:  "+count);}
         else{
             if(count == 0)
               res.setText("ุงููุนุฐุฑุฉ:ูุฐู ุงููููุฉ ุงูุชู ุฃุฏุฎูุชูุง ุบูุฑ ููุฌูุฏุฉ ูู ุงููุต");
             else
               res.setText("ุนุฏุฏ ูุฑุงุช ุชูุฑุงุฑ ูููุฉ ("+word+"):  "+count);
              
         }
    }//GEN-LAST:event_frequencyWordActionPerformed

    private void replaceWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceWordActionPerformed
        String s = text.getText(); // take The Text Which Exists In TextArea
        String curr="";
        String rep="";
        if(convert.getText().equals("Convert To Arabic")){
              curr = JOptionPane.showInputDialog(null , "Input The Word Which You Want Replace:\n                "); // To Know Word Replaced
              rep = JOptionPane.showInputDialog(null,"Input New Word:\n               " ); 
        }
        else{
              curr = JOptionPane.showInputDialog(null , "ุงุฏุฎู ุงููููุฉ ุงูุชู ุชุฑูุฏ ุงุณุชุจุฏุงููุง:\n                "); // To Know Word Replaced
              rep = JOptionPane.showInputDialog(null,"ุงุฏุฎู ุงููููุฉ ุงูุฌุฏูุฏุฉ:\n               " ); 
        }
        boolean b = false; // To Know If The Word Exists And Replace It
        String temp = s.replaceAll(curr, rep);
        if(temp.equals(s))
            b=false;
        else{
            b=true;
            text.setText(temp);}
        if(b){ // If Replace Success
            if(convert.getText().equals("Convert To Arabic"))
              res.setText("Successfull Replacement");
            else
              res.setText("ุชู ุงูุชุจุฏูู ุจูุฌุงุญ");  
            text.setText(temp);}
        else{
            if(convert.getText().equals("Convert To Arabic"))
               res.setText("Sorry: This Word You Already Insert Is Not Exist In The Text To Replace"+rep);
            else
              res.setText("ุงููุนุฐุฑุฉ:ูุฐู ุงููููุฉ ุงูุชู ุฃุฏุฎูุชูุง ุบูุฑ ููุฌูุฏุฉ ุจุงููุต");   
        }
    }//GEN-LAST:event_replaceWordActionPerformed

    private void resActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resActionPerformed

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
        if(convert.getText().equals("Convert To Arabic")){
        res.setText("");
        super.setTitle("ูููุฑุฉ ูุงุฏู");
        file.setText("ููู");
        openFile.setText("ูุชุญ ููู");
        saveFile.setText("ุญูุธ ุงูููู");
        saveAs.setText("ุญูุธ ู");
        exit.setText("ุฎุฑูุฌ");
        newFile.setText("ููู ุฌุฏูุฏ");
        print.setText("ุทุจุงุนุฉ");
        edit.setText("ุชุญุฑูุฑ");
        copy.setText("ูุณุฎ");
        paste.setText("ูุตู");
        cut.setText("ูุต");
        selectAll.setText("ุงุฎุชูุงุฑ ุงููู");
        color.setText("ุงูููู");
        colorText.setText("ุงุฎุชูุงุฑ ููู ุงููุต");
        colorBackground.setText("ุงุฎุชูุงุฑ ููู ุงูุฎูููุฉ");
        features.setText("ุงูููุฒุงุช");
        capitalLetterCount.setText("ุนุฏุฏ ุงูุฃุญุฑู ุงููุจูุฑุฉ ุงูุงูุฌููุฒูุฉ");
        smallLetterCount.setText("ุนุฏุฏ ุงูุฃุญุฑู ุงูุงูุฌููุฒูุฉ ุงูุตุบูุฑุฉ"); // Hide The Button Which Not Exists Inside Arabic Interface
        vowelsLetterCount.setText("ุนุฏุฏ ุงูุฃุญุฑู ุงูุตูุชูุฉ ุงูุงูุฌููุฒูุฉ");
        frequencyLetter.setText("ุนุฏุฏ ูุฑุงุช ุชูุฑุงุฑ ุญุฑู");
        wordCount.setText("ุนุฏุฏ ุงููููุงุช");
        numberCount.setText("ุนุฏุฏ ุงูุฃุฑูุงู");
        frequencyWord.setText("ุชูุฑุงุฑ ูููุฉ");
        replaceWord.setText("ุงุณุชุจุฏุงู ูููุฉ");
        arabicLettersCount.setText("ุนุฏุฏ ุงูุฃุญุฑู ุงูุนุฑุจูุฉ");
        showAllInfo.setText("ุฅุธูุงุฑ ุฌููุน ูุนูููุงุช ุงููุต");
        about.setText("ุญูู");
        convert.setText("ุงูุชุญููู ููุงูุฌููุฒูุฉ");
        resLabel.setText("ุงููุชูุฌุฉ");
        equation.setText("ุงููุนุงุฏูุงุช");
        linear.setText("ูุนุงุฏูุฉ ุฎุทูุฉ");
        square.setText("ูุนุงุฏูุฉ ุชุฑุจูุนูุฉ");
        circle.setText("ูุนุงุฏูุฉ ุฏุงุฆุฑุฉ");
        sphere.setText("ูุนุงุฏูุฉ ูุฑุฉ");
        parabola.setText("ูุนุงุฏูุฉ ูุทุน ููุงูุฆ");
        ellipse.setText("ูุนุงุฏูุฉ ูุทุน ูุงูุต");
        hyperbola.setText("ูุนุงุฏูุฉ ูุทุน ุฒุงุฆุฏ");
        }
        else{
        super.setTitle("Fadi Text Editor");
        res.setText("");
        file.setText("File");
        openFile.setText("Open File");
        saveFile.setText("Save File");
        saveAs.setText("Save As");
        exit.setText("Exit");
        newFile.setText("New File");
        print.setText("Print");
        edit.setText("Edit");
        copy.setText("Copy");
        paste.setText("Paste");
        cut.setText("Cut");
        selectAll.setText("Select All");
        color.setText("Color");
        colorText.setText("Select Color Text");
        colorBackground.setText("Select Color Background");
        features.setText("Features");
        wordCount.setText("Words Count");
        numberCount.setText("Numbers Count");
        frequencyWord.setText("Frequency Of Word");
        replaceWord.setText("Replace Word");
        arabicLettersCount.setText("Arabic Letters Count");
        showAllInfo.setText("Show All Information");
        about.setText("About");
        convert.setText("Convert To Arabic");
        resLabel.setText("Result");  
         capitalLetterCount.setText("Capital Letters Count");
        smallLetterCount.setText("Small Letters Count");// Return The Features Which We Hide When We Convert Interface To Arabic
        vowelsLetterCount.setText("Vowels Letters Count");
        frequencyLetter.setText("Frequency Of Letter");
         equation.setText("Equations");
        linear.setText("Linear Equation");
        square.setText("Square Equation");
        circle.setText("Circle Equation");
        sphere.setText("Sphere Equation");
        parabola.setText("Parabola");
         ellipse.setText("Ellipse");
        hyperbola.setText("Hyperbola");
        }
    }//GEN-LAST:event_convertActionPerformed

    private void arabicLettersCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arabicLettersCountActionPerformed
         String s = text.getText();
        char[] array = s.toCharArray();
        int count=0;
        for(int i=0 ; i<array.length ; i++)
            if(array[i]>='ุฃ' && array[i]<='ู')
                count++;
        if(convert.getText().equals("Convert To Arabic")){
          res.setText("Number Of Arabic Letters is:  "+count);
          inf1+="*Number Of Arabic Letters is:"+count+"\n";}
        else{
          res.setText("ุนุฏุฏ ุงูุฃุญุฑู ุงูุนุฑุจูุฉ: "+count);
          inf2+="*ุนุฏุฏ ุงูุฃุญุฑู ุงูุนุฑุจูุฉ:"+count+"\n";}
    }//GEN-LAST:event_arabicLettersCountActionPerformed

    private void aboutMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_aboutMenuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuKeyPressed

    private void colorBackgroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorBackgroundActionPerformed
           JColorChooser colorObject = new JColorChooser();
        Color color = JColorChooser.showDialog(this , "Change Color" , Color.BLUE); // To Know What Color User Select
        text.setBackground(color);
        
    }//GEN-LAST:event_colorBackgroundActionPerformed

    private void frequencyLetterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyLetterActionPerformed
        String s = text.getText();
        String letter="";
        int count=0;
        if(convert.getText().equals("Convert To Arabic")){
          letter = JOptionPane.showInputDialog(null,"Input The letter Which You Want Know Frequency In The Text:");
          if(letter.length()>1){
              JOptionPane.showMessageDialog(null, "Error Input");
              return;}
        }
        else{
             letter = JOptionPane.showInputDialog(null, "ุฃุฏุฎู ุงูุญุฑู ุงูุฐู ุชุฑูุฏ ูุนุฑูุฉ ุชูุฑุงุฑู ูู ุงููุต:");
              if(letter.length()>1){
              JOptionPane.showMessageDialog(null, "ุฎุทุฃ ูู ุงูุฅุฏุฎุงู");
              return;}
        }
        for(int i=0 ;i<s.length();i++)
            if(letter.charAt(0)==s.charAt(i))
                count++;
         if(convert.getText().equals("Convert To Arabic"))
             res.setText("Frequency Of Letter("+letter+") Is:"+count );
         else
             res.setText("ุนุฏุฏ ูุฑุงุช ุชูุฑุงุฑ ุงูุญุฑู("+letter+") :"+count);
    }//GEN-LAST:event_frequencyLetterActionPerformed

    private void showAllInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllInfoActionPerformed
         inf1="Information About Text:\n"; // To put All Informatin In English For Show All Information Button
         inf2="ูุนูููุงุช ุญูู ุงููุต:\n";
        smallLetterCountActionPerformed(evt);
        capitalLetterCountActionPerformed(evt);
        vowelsLetterCountActionPerformed(evt);
        arabicLettersCountActionPerformed(evt);
        wordCountActionPerformed(evt);
        numberCountActionPerformed(evt);
        res.setText("");
        if(convert.getText().equals("Convert To Arabic"))
            JOptionPane.showMessageDialog(null, inf1);
        else
            JOptionPane.showMessageDialog(null, inf2);
        inf1="";
        inf2=""; // Reset To Empty String For Dont Repeate The Information When We Call Again
        
    }//GEN-LAST:event_showAllInfoActionPerformed

    private void textKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textKeyPressed
        String name = text.getFont().getName();
        int style = text.getFont().getStyle();
        int size = text.getFont().getSize();
        if(evt.getKeyCode()==evt.VK_UP && evt.getModifiers()==evt.CTRL_MASK){
            Font font = new Font(name,style,size+1);
            text.setFont(font);
        }
      else  if(evt.getKeyCode()==evt.VK_DOWN  && evt.getModifiers()==evt.CTRL_MASK){
          Font font = new Font(name,style,size-1);
            text.setFont(font);
      }
    }//GEN-LAST:event_textKeyPressed

    private void equationMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_equationMenuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_equationMenuKeyPressed

    private void equationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_equationMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_equationMouseClicked

    private void equationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_equationActionPerformed
String a,b,c,d; // To use for all equation in global state for english and arabic language
    private void linearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linearActionPerformed
        
        if(convert.getText().equals("Convert To Arabic")){
        a =  JOptionPane.showInputDialog(null ,"             The Form <ax+b=d>\nInput Operand a:");
        b =  JOptionPane.showInputDialog(null ,"<ax+b=d>\nInput Operand b:");
        d =  JOptionPane.showInputDialog(null ,"<ax+b=d>\nInput Operand d:");}
        else{
             a =  JOptionPane.showInputDialog(null ,"ุดูู ุงููุนุงุฏูุฉ : <ax+b=d> \nุงุฏุฎู ุงููุนุงูู a:");
             b =  JOptionPane.showInputDialog(null ,"<ax+b=d> \n  ุงุฏุฎู ุงููุนุงูู b:");
             d =  JOptionPane.showInputDialog(null ,"<ax+b=d>ุงุฏุฎู ุงููุนุงูู d:");}
        
        int num2 = Integer.parseInt(b);
        a+='X';
        if(num2 >=0)
            a+="+"+b;
        else
            a+=b; 
        a+="= "+d;    
        String t = text.getText();
        t +="  "+a;
        text.setText(t);
        if(convert.getText().equals("Convert To Arabic"))
           res.setText("Successfully Insert");
        else
         res.setText("ุชู ุงูุฅุฏุฎุงู ุจูุฌุงุญ");
    }//GEN-LAST:event_linearActionPerformed

    private void squareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareActionPerformed
          if(convert.getText().equals("Convert To Arabic")){
        a =  JOptionPane.showInputDialog(null ,"             The Form <ax^2+bx+c=d>\nInput Operand a:");
        b =  JOptionPane.showInputDialog(null ,"<ax^2+bx+c=d>\nInput Operand b:");
        c = JOptionPane.showInputDialog(null ,"<ax^2+bx+c=d>\nInput Operand c:");
        d =  JOptionPane.showInputDialog(null ,"<ax^2+bx+c=d>\nInput Operand d:");}
        else{
             a =  JOptionPane.showInputDialog(null ,"ุดูู ุงููุนุงุฏูุฉ : <ax^2+bx+c=d> \nุงุฏุฎู ุงููุนุงูู a:");
             b =  JOptionPane.showInputDialog(null ,"<ax^2+bx+c=d> \n  ุงุฏุฎู ุงููุนุงูู b:");
             c =  JOptionPane.showInputDialog(null ,"<ax^2+bx+c=d> \n  ุงุฏุฎู ุงููุนุงูู c:");
             d =  JOptionPane.showInputDialog(null ,"<ax^2+bx+c=d>ุงุฏุฎู ุงููุนุงูู d:");
          }
          
        int num2 = Integer.parseInt(b);
        int num3 = Integer.parseInt(c);
        a+="X^2";
        if(num2>=0)
            a+='+'+b+'X';
        else
            a+=b+'X';
        if(num3>=0)
            a+='+'+c+"= ";
        else
            a+=c+"= ";
        a+=d;
        String t = text.getText();
        t+=" " + a;
        text.setText(t);
        if(convert.getText().equals("Convert To Arabic"))
           res.setText("Successfully Insert");
        else
         res.setText("ุชู ุงูุฅุฏุฎุงู ุจูุฌุงุญ");          
    }//GEN-LAST:event_squareActionPerformed

    private void circleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circleActionPerformed
         if(convert.getText().equals("Convert To Arabic")){
        a =  JOptionPane.showInputDialog(null ,"             The Form <(X-X0)^2 + (Y-Y0)^2 = R^2>\nInput Operand X0:");
        b =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 + (Y-Y0)^2 = R^2>\nInput Operand Y0:");
        c = JOptionPane.showInputDialog(null ,"<(X-X0)^2 + (Y-Y0)^2 = R^2>\nInput Operand R:");
       }
        else{
             a =  JOptionPane.showInputDialog(null ,"ุดูู ุงููุนุงุฏูุฉ : <(X-X0)^2 + (Y-Y0)^2 = R^2> \nุงุฏุฎู ุงููุนุงูู X0:");
             b =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 + (Y-Y0)^2 = R^2> \n  ุงุฏุฎู ุงููุนุงูู Y0:");
             c =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 + (Y-Y0)^2 = R^2> \n  ุงุฏุฎู ุงููุนุงูู R:");
          }
        int x0 = Integer.parseInt(a);
        int y0 = Integer.parseInt(b);
        int r = Integer.parseInt(c);
        r = r*r;
        c=r+"";
        String e="";
        if(x0 >=0)
            e ="(X-"+a+")^2+";
        else{
               a=-x0+"";
               e ="(X+"+a+")^2+";
        }
         
        if(y0>=0)
            e+="(Y-"+b+")^2 = "+c;
        else{
            b=-y0+"";
            e+="(Y+"+b+")^2 = "+c;}
         String t = text.getText();
        t+=" " + e;
        text.setText(t);
         if(convert.getText().equals("Convert To Arabic"))
           res.setText("Successfully Insert");
        else
         res.setText("ุชู ุงูุฅุฏุฎุงู ุจูุฌุงุญ"); 
    }//GEN-LAST:event_circleActionPerformed

    private void sphereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sphereActionPerformed
            if(convert.getText().equals("Convert To Arabic")){
        a =  JOptionPane.showInputDialog(null ,"             The Form <(X-X0)^3 + (Y-Y0)^3 + (Z-Z0)^3 = R^2>\nInput Operand X0:");
        b =  JOptionPane.showInputDialog(null ,"<(X-X0)^3 + (Y-Y0)^3 + (Z-Z0)^3 = R^2>\nInput Operand Y0:");
        c =  JOptionPane.showInputDialog(null ,"<(X-X0)^3 + (Y-Y0)^3 + (Z-Z0)^3 = R^2>\nInput Operand Z0:");
        d = JOptionPane.showInputDialog(null ,"<(X-X0)^3 + (Y-Y0)^3 + (Z-Z0)^3 = R^2>\nInput Operand R:");
       }
        else{
             a =  JOptionPane.showInputDialog(null ,"ุดูู ุงููุนุงุฏูุฉ : <(X-X0)^3 + (Y-Y0)^3 + (Z-Z0)^3 = R^2> \nุงุฏุฎู ุงููุนุงูู X0:");
             b =  JOptionPane.showInputDialog(null ,"<(X-X0)^3 + (Y-Y0)^3 + (Z-Z0)^3 = R^2> \n  ุงุฏุฎู ุงููุนุงูู Y0:");
             c =  JOptionPane.showInputDialog(null ,"<(X-X0)^3 + (Y-Y0)^3 + (Z-Z0)^3 = R^2>\nุงุฏุฎู ุงููุนุงูู Z0:");
             d =  JOptionPane.showInputDialog(null ,"<(X-X0)^3 + (Y-Y0)^3 + (Z-Z0)^3 = R^2> \n  ุงุฏุฎู ุงููุนุงูู R:");
          }
        int x0 = Integer.parseInt(a);
        int y0 = Integer.parseInt(b);
        int z0 = Integer.parseInt(c);
        int r = Integer.parseInt(d);
        r = r*r;
        String e="";
        if(x0 >=0)
            e ="(X-"+a+")^3+";
        else{
               a=-x0+"";
               e ="(X+"+a+")^3+";
        }
         
        if(y0>=0)
            e+="(Y-"+b+")^3+";
        else{
            b=-y0+"";
            e+="(Y+"+b+")^3+";}
        if(z0>=0)
            e+="(Z-"+c+")^3= "+r;
        else{
            c=-z0+"";
            e+="(Z+"+c+")^3= "+r;
        }
         String t = text.getText();
        t+=" " + e;
        text.setText(t);
         if(convert.getText().equals("Convert To Arabic"))
           res.setText("Successfully Insert");
        else
         res.setText("ุชู ุงูุฅุฏุฎุงู ุจูุฌุงุญ"); 
    }//GEN-LAST:event_sphereActionPerformed

    private void parabolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parabolaActionPerformed
        String choise=""; 
        if(convert.getText().equals("Convert To Arabic")){
        choise = JOptionPane.showInputDialog(null,"What Is The Axis Of Symmetry Which You Want:\n1-OX\n2-Oy");
        if(choise.equals("1")){
        a =  JOptionPane.showInputDialog(null ,"             The Form <(X-X0)^2 = 4*P(Y-Y0)>\nInput Operand X0:");
        b =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 = 4*P(Y-Y0)>\nInput Operand Y0:");
        c =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 = 4*P(Y-Y0)>\nInput Operand P:");
        }
        else{
        a =  JOptionPane.showInputDialog(null ,"             The Form <(Y-Y0)^2 = 4*P(X-X0)>\nInput Operand X0:");
        b =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 = 4*P(Y-Y0)>\nInput Operand Y0:");
        c =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 = 4*P(Y-Y0)>\nInput Operand P:");
        }
       }
        else{
            choise = JOptionPane.showInputDialog(null,"ูุง ูู ูุญูุฑ ุงูุชูุงุธุฑ ุงูุฐู ุชุฑูุฏู:\n1-OX\n2-Oy");
        if(choise.equals("1")){
        a =  JOptionPane.showInputDialog(null ,"             ุงูุดูู ุงูุนุงู <(X-X0)^2 = 4*P(Y-Y0)>\nุงุฏุฎู ุงููุนุงูู X0:");
        b =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 = 4*P(Y-Y0)>\nุงุฏุฎู ุงููุนุงูู Y0:");
        c =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 = 4*P(Y-Y0)>\nุงุฏุฎู ุงููุนุงูู P:");
        }
        else{
        a =  JOptionPane.showInputDialog(null ,"             ุงูุดูู ุงูุนุงู <(Y-Y0)^2 = 4*P(X-X0)>\nุงุฏุฎู ุงููุนุงูู X0:");
        b =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 = 4*P(Y-Y0)>\nุงุฏุฎู ุงููุนุงูู Y0:");
        c =  JOptionPane.showInputDialog(null ,"<(X-X0)^2 = 4*P(Y-Y0)>\nุงุฏุฎู ุงููุนุงูู P:");
        }  
        }  
        int x0 = Integer.parseInt(a);
        int y0 = Integer.parseInt(b);
        int p = Integer.parseInt(c);
         String e="";
        if(choise.equals("1")){
        if(x0 >=0)
            e ="(X-"+a+")^2=";
        else{
               a=-x0+"";
               e ="(X+"+a+")^2=";
        }
        c = 4*p+"";
        e+=c;
        if(y0>=0)
            e+="(Y-"+b+")";
        else{
            b=-y0+"";
            e+="(Y+"+b+")";}
        }
       else{
        if(y0>=0)
            e+="(Y-"+b+")^2=";
        else{
            b=-y0+"";
            e+="(Y+"+b+")^2=";
        } 
        c = 4*p+"";
        e+=c;
        if(x0 >=0)
            e +="(X-"+a+")";
        else{
               a=-x0+"";
               e +="(X+"+a+")";
            }
        }
        String t = text.getText();
        t+=" "+e;
        text.setText(t);
        if(convert.getText().equals("Convert To Arabic"))
           res.setText("Successfully Insert");
        else
         res.setText("ุชู ุงูุฅุฏุฎุงู ุจูุฌุงุญ"); 
        
    }//GEN-LAST:event_parabolaActionPerformed

    private void ellipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ellipseActionPerformed
         if(convert.getText().equals("Convert To Arabic")){
        a =  JOptionPane.showInputDialog(null ,"             The Form <((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1>\nInput Operand X0:");
        b =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1>\nInput Operand a:");
        c =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1>\nInput Operand Y0:");
        d = JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1>\nInput Operand b:");
       }
        else{
             a =  JOptionPane.showInputDialog(null ,"ุดูู ุงููุนุงุฏูุฉ : <((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1> \nุงุฏุฎู ุงููุนุงูู X0:");
             b =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1> \n  ุงุฏุฎู ุงููุนุงูู a:");
             c =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2=1)>\nุงุฏุฎู ุงููุนุงูู Y0:");
             d =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1> \n  ุงุฏุฎู ุงููุนุงูู b:");
          }
        int x0 = Integer.parseInt(a);
        int a1 = Integer.parseInt(b);
            a1 = a1*a1;
        int y0 = Integer.parseInt(c);
        int b1 = Integer.parseInt(d);
        b1=b1*b1;
        if((a1==0 || b1==0) && convert.getText().equals("Convert To Arabic")){// if user input a=0 Or b=0 This Is Error
            res.setText("Error Input:Divide By Zero");
            return;
        }
         if((a1==0 || b1==0)&& convert.getText().equals("ุงูุชุญููู ููุงูุฌููุฒูุฉ")){
            res.setText("ุฎุทุฃ ุจุงูุงุฏุฎุงู:ุชูุณูู ุนูู ุตูุฑ");
            return;
        }
         
        String e = "((";
        if(x0>=0)
            e+="X-"+a+")^2/"+a1+")+((";
        else{
            x0=-x0;
            e+="X+"+x0+")^2/"+a1+")+((";  
        }
        if(y0>=0)
            e+="Y-"+y0+")^2/"+b1+")";
        else{
            y0=-y0;
            e+="Y+"+y0+")^2/"+b1+")";
        }
        e+="=1";
         String t = text.getText();
         t +=" "+e;
         text.setText(t);
        if(convert.getText().equals("Convert To Arabic"))
           res.setText("Successfully Insert");
        else
         res.setText("ุชู ุงูุฅุฏุฎุงู ุจูุฌุงุญ"); 
    }//GEN-LAST:event_ellipseActionPerformed

    private void hyperbolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hyperbolaActionPerformed
        String choise=""; 
        if(convert.getText().equals("Convert To Arabic")){
         choise = JOptionPane.showInputDialog(null,"What Is The Axis Of Symmetry Which You Want:\n1-OX\n2-Oy");
         if(choise.equals("1")){
         a =  JOptionPane.showInputDialog(null ,"             The Form <((X-X0)^2/a^2)-((Y-Y0)^2/b^2)=1>\nInput Operand X0:");
         b =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)-((Y-Y0)^2/b^2)=1>\nInput Operand a:");
         c =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)-((Y-Y0)^2/b^2)=1>\nInput Operand Y0:");
         d = JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)-((Y-Y0)^2/b^2)=1>\nInput Operand b:");
         }
         else{
              a =  JOptionPane.showInputDialog(null ,"             The Form <(((Y-Y0)^2/b^2)-((X-X0)^2/a^2)=1>\nInput Operand X0:");
         b =  JOptionPane.showInputDialog(null ,"<(((Y-Y0)^2/b^2)-((X-X0)^2/a^2)=1>\nInput Operand a:");
         c =  JOptionPane.showInputDialog(null ,"<(((Y-Y0)^2/b^2)-((X-X0)^2/a^2)=1>\nInput Operand Y0:");
         d = JOptionPane.showInputDialog(null ,"<(((Y-Y0)^2/b^2)-((X-X0)^2/a^2)=1>\nInput Operand b:");
         }
       }
        else{
             choise = JOptionPane.showInputDialog(null,":ูุง ูู ูุญูุฑ ุงูุชูุงุธุฑ ุงูุฐู ุชุฑูุฏู\n1-OX\n2-Oy");
            if(choise.equals("1")){  
             a =  JOptionPane.showInputDialog(null ,"ุดูู ุงููุนุงุฏูุฉ : <((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1> \nุงุฏุฎู ุงููุนุงูู X0:");
             b =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1> \n  ุงุฏุฎู ุงููุนุงูู a:");
             c =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2=1)>\nุงุฏุฎู ุงููุนุงูู Y0:");
             d =  JOptionPane.showInputDialog(null ,"<((X-X0)^2/a^2)+((Y-Y0)^2/b^2)=1> \n  ุงุฏุฎู ุงููุนุงูู b:");
          }
            else{
                 a =  JOptionPane.showInputDialog(null ,"ุดูู ุงููุนุงุฏูุฉ : <(((Y-Y0)^2/b^2)-((X-X0)^2/a^2)=1> \nุงุฏุฎู ุงููุนุงูู X0:");
             b =  JOptionPane.showInputDialog(null ,"<(((Y-Y0)^2/b^2)-((X-X0)^2/a^2)=1> \n  ุงุฏุฎู ุงููุนุงูู a:");
             c =  JOptionPane.showInputDialog(null ,"<(((Y-Y0)^2/b^2)-((X-X0)^2/a^2)=1>\nุงุฏุฎู ุงููุนุงูู Y0:");
             d =  JOptionPane.showInputDialog(null ,"<(((Y-Y0)^2/b^2)-((X-X0)^2/a^2)=1> \n  ุงุฏุฎู ุงููุนุงูู b:");
            }
        }
        int x0 = Integer.parseInt(a);
        int a1 = Integer.parseInt(b);
            a1 = a1*a1;
        int y0 = Integer.parseInt(c);
        int b1 = Integer.parseInt(d);
        b1=b1*b1;
           if((a1==0 || b1==0) && convert.getText().equals("Convert To Arabic")){// if user input a=0 Or b=0 This Is Error
            res.setText("Error Input:Divide By Zero");
            return;
        }
         if((a1==0 || b1==0)&& convert.getText().equals("ุงูุชุญููู ููุงูุฌููุฒูุฉ")){
            res.setText("ุฎุทุฃ ุจุงูุงุฏุฎุงู:ุชูุณูู ุนูู ุตูุฑ");
            return;
        }
        String e = "((";
        if(choise.equals("1")){
        if(x0>=0)
            e+="X-"+a+")^2/"+a1+")+((";
        else{
            x0=-x0;
            e+="X+"+x0+")^2/"+a1+")+((";  
        }
        if(y0>=0)
            e+="Y-"+y0+")^2/"+b1+")";
        else{
            y0=-y0;
            e+="Y+"+y0+")^2/"+b1+")";
        }
       }
        else{
             if(y0>=0)
            e+="Y-"+y0+")^2/"+b1+"+((";
        else{
            y0=-y0;
            e+="Y+"+y0+")^2/"+b1+"+((";}
         if(x0>=0)
            e+="X-"+a+")^2/"+a1+")";
        else{
            x0=-x0;
            e+="X+"+x0+")^2/"+a1+")";  
        }
        
        }
        e+="=1";
         String t = text.getText();
         t +=" "+e;
         text.setText(t);
        if(convert.getText().equals("Convert To Arabic"))
           res.setText("Successfully Insert");
        else
         res.setText("ุชู ุงูุฅุฏุฎุงู ุจูุฌุงุญ"); 
        
    }//GEN-LAST:event_hyperbolaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(notebadProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(notebadProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(notebadProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(notebadProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new notebadProject().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu about;
    private javax.swing.JMenuItem arabicLettersCount;
    private javax.swing.JMenuItem capitalLetterCount;
    private javax.swing.JMenuItem circle;
    private javax.swing.JMenu color;
    private javax.swing.JMenuItem colorBackground;
    private javax.swing.JMenuItem colorText;
    private javax.swing.JButton convert;
    private javax.swing.JMenuItem copy;
    private javax.swing.JMenuItem cut;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem ellipse;
    private javax.swing.JMenu equation;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu features;
    private javax.swing.JMenu file;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JMenuItem frequencyLetter;
    private javax.swing.JMenuItem frequencyWord;
    private javax.swing.JMenuItem hyperbola;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private javax.swing.JMenuItem linear;
    private javax.swing.JMenuItem newFile;
    private javax.swing.JMenuItem numberCount;
    private javax.swing.JMenuItem openFile;
    private javax.swing.JMenuItem parabola;
    private javax.swing.JMenuItem paste;
    private javax.swing.JMenuItem print;
    private javax.swing.JMenuItem replaceWord;
    private javax.swing.JTextField res;
    private javax.swing.JLabel resLabel;
    private javax.swing.JMenuItem saveAs;
    private javax.swing.JMenuItem saveFile;
    private javax.swing.JMenuItem selectAll;
    private javax.swing.JMenuItem showAllInfo;
    private javax.swing.JMenuItem smallLetterCount;
    private javax.swing.JMenuItem sphere;
    private javax.swing.JMenuItem square;
    private javax.swing.JTextPane text;
    private java.awt.TextField textField1;
    private javax.swing.JMenuItem vowelsLetterCount;
    private javax.swing.JMenuItem wordCount;
    // End of variables declaration//GEN-END:variables

    private void save() {
      
    }

}
